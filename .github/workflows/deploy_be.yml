name: Deploy to PythonAnywhere
on:
  workflow_run:
    workflows: ["Train ML Model"]
    types: [completed]
jobs:
  deploy:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests
      
      - name: Deploy to PythonAnywhere
        env:
          PA_API_TOKEN: ${{ secrets.PA_API_TOKEN }}
          PA_USERNAME: ${{ secrets.PA_USERNAME }}
          PA_DOMAIN: ${{ secrets.PA_DOMAIN }}
        run: |
          python -c "
          import requests
          import os
          import base64
          import zipfile
          from pathlib import Path
          
          username = os.environ['PA_USERNAME']
          token = os.environ['PA_API_TOKEN']
          domain = os.environ['PA_DOMAIN']
          
          def create_zip():
              with zipfile.ZipFile('deployment.zip', 'w', zipfile.ZIP_DEFLATED) as zipf:
                  for root, dirs, files in os.walk('.'):
                      dirs[:] = [d for d in dirs if not d.startswith('.') and d != '__pycache__']
                      for file in files:
                          if not file.startswith('.') and not file.endswith('.pyc'):
                              file_path = os.path.join(root, file)
                              arcname = os.path.relpath(file_path, '.')
                              zipf.write(file_path, arcname)
          
          create_zip()
          
          headers = {'Authorization': f'Token {token}'}
          
          with open('deployment.zip', 'rb') as f:
              files = {'content': f}
              response = requests.post(
                  f'https://www.pythonanywhere.com/api/v0/user/{username}/files/path/home/{username}/deployment.zip',
                  headers=headers,
                  files=files
              )
              print(f'Upload response: {response.status_code}')
          
          response = requests.post(
              f'https://www.pythonanywhere.com/api/v0/user/{username}/webapps/{domain}/reload/',
              headers=headers
          )
          print(f'Reload response: {response.status_code}')
          
          if response.status_code == 200:
              print('Deployment successful!')
          else:
              print(f'Deployment failed: {response.text}')
              exit(1)
          "
      
      - name: Verify deployment
        env:
          PA_DOMAIN: ${{ secrets.PA_DOMAIN }}
        run: |
          sleep 30
          
          response_code=$(curl -s -o /dev/null -w "%{http_code}" https://$PA_DOMAIN)
          if [ $response_code -eq 200 ]; then
            echo "Deployment verification successful - app is responding"
          else
            echo "Deployment verification failed - app returned $response_code"
            exit 1
          fi