name: Deploy Server with New Model
on:
  push:
    paths:
      - 'server/**'
    branches: [ main, master, feature/merge_deployment ]  # Added master branch for compatibility
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout server code
      uses: actions/checkout@v3
      
    - name: Get latest successful Train ML Model run
      id: get-model-run
      uses: actions/github-script@v7
      with:
        script: |
          const runs = await github.rest.actions.listWorkflowRuns({
            owner: context.repo.owner,
            repo: context.repo.repo,
            workflow_id: 'train_model.yml', // adjust to your actual filename
            status: 'completed',
            conclusion: 'success',
            per_page: 1
          });
          
          if (runs.data.workflow_runs.length === 0) {
            core.setFailed('No successful Train ML Model runs found');
            return;
          }
          
          const latestRun = runs.data.workflow_runs[0];
          core.setOutput('run-id', latestRun.id);
          console.log(`Latest successful run ID: ${latestRun.id}`);

    - name: Download latest model artifacts
      uses: actions/download-artifact@v4
      with:
        name: model-artifacts
        path: temp-artifacts
        run-id: ${{ steps.get-model-run.outputs.run-id }}
        github-token: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract and update model files
      run: |
        # Extract the specific model files from the downloaded artifacts
        # (artifacts are already unzipped by download-artifact action)
        cp temp-artifacts/xgboost_final_model.pkl server/infrastructure/ml/models_store/xgboost_final_model.pkl
        cp temp-artifacts/le_country.pkl server/infrastructure/ml/models_store/le_country.pkl
        cp temp-artifacts/le_loc.pkl server/infrastructure/ml/models_store/le_loc.pkl
        cp temp-artifacts/le_cat.pkl server/infrastructure/ml/models_store/le_cat.pkl
        
        # Clean up temp directory
        rm -rf temp-artifacts
        
        # List the updated files
        echo "Updated model files:"
        ls -la server/models/

    - name: Commit model updates to server/models
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add server/models/
        if git diff --staged --quiet; then
          echo "No model changes to commit"
        else
          git commit -m "Update ML model artifacts from training run ${{ steps.get-model-run.outputs.run-id }}"
          git push
        fi

    - name: Trigger Railway Deploy
      run: |
        curl -X POST https://backboard.railway.app/project/${{ secrets.RAILWAY_PROJECT_ID }}/deploy \
          -H "Authorization: Bearer ${{ secrets.RAILWAY_API_TOKEN }}"
